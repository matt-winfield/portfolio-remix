name: 🔨🚀 Build + Deploy
on:
    push:
        branches:
            - main
            - dev
    pull_request: {}

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions:
    actions: write
    contents: read

jobs:
    lint:
        name: ⬣ ESLint
        runs-on: ubuntu-latest
        steps:
            - name: ⬇️ Checkout repo
              uses: actions/checkout@v3

            - name: 📥 Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: ⎔ Setup node
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: 'pnpm'

            - name: 📥 Download deps
              run: pnpm install

            - name: 🖼 Build icons
              run: pnpm run build:icons

            - name: 🔬 Lint
              run: pnpm run lint

    typecheck:
        name: ʦ TypeScript
        runs-on: ubuntu-latest
        steps:
            - name: ⬇️ Checkout repo
              uses: actions/checkout@v3

            - name: 📥 Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: ⎔ Setup node
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: 'pnpm'

            - name: 📥 Download deps
              run: pnpm install

            - name: 🛠 Generate Prisma types
              run: pnpm generate

            - name: 🖼 Build icons
              run: pnpm run build:icons

            - name: 🔎 Type check
              run: pnpm run --if-present typecheck

    vitest:
        name: ⚡ Vitest
        runs-on: ubuntu-latest
        steps:
            - name: ⬇️ Checkout repo
              uses: actions/checkout@v3

            - name: 📥 Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: ⎔ Setup node
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: 'pnpm'

            - name: 📥 Download deps
              run: pnpm install

            - name: 🏄 Copy test env vars
              run: cp .env.example .env

            - name: 🖼 Build icons
              run: pnpm run build:icons

            - name: 🛠 Generate Prisma types
              run: pnpm generate

            - name: ⚡ Run vitest
              run: pnpm run test -- --coverage

    playwright:
        name: 🎭 Playwright
        runs-on: ubuntu-latest
        timeout-minutes: 60
        steps:
            - name: ⬇️ Checkout repo
              uses: actions/checkout@v3

            - name: 🏄 Copy test env vars
              run: cp .env.example .env

            - name: 📥 Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: ⎔ Setup node
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: 'pnpm'

            - name: 📥 Download deps
              run: pnpm install

            - name: 📥 Install Playwright Browsers
              run: pnpm run test:e2e:install

            - name: 🏦 Cache Database
              id: db-cache
              uses: actions/cache@v3
              with:
                  path: prisma/data.db
                  key: db-cache-schema_${{ hashFiles('./prisma/schema.prisma')}}-migrations_${{ hashFiles('./prisma/migrations/*/migration.sql')}}

            - name: 🛠 Setup Database
              run: pnpm prisma migrate deploy

            - name: 🛠 Generate Prisma types
              run: pnpm generate

            - name: 🌱 Seed Database
              if: steps.db-cache.outputs.cache-hit != 'true'
              run: pnpm prisma db seed
              env:
                  MINIMAL_SEED: true

            - name: 🏗 Build
              run: pnpm run build

            - name: 🎭 Playwright tests
              run: pnpm playwright test

            - name: 📊 Upload report
              uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: playwright-report
                  path: playwright-report/
                  retention-days: 30

    deploy:
        name: 🚀 Deploy
        runs-on: ubuntu-latest
        needs: [lint, typecheck, vitest, playwright]
        # only build/deploy main branch on pushes, not PRs
        if:
            ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

        steps:
            - name: ⬇️ Checkout repo
              uses: actions/checkout@v3

            - name: 👀 Read app name
              uses: SebRollen/toml-action@v1.0.2
              id: app_name
              with:
                  file: 'fly.toml'
                  field: 'app'

            # move Dockerfile to root
            - name: 🚚 Move Dockerfile
              run: |
                  mv ./other/Dockerfile ./Dockerfile
                  mv ./other/.dockerignore ./.dockerignore

            - name: 🎈 Setup Fly
              uses: superfly/flyctl-actions/setup-flyctl@v1.4

            - name: 🚀 Deploy Staging
              if: ${{ github.ref == 'refs/heads/dev' }}
              run:
                flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}-staging
              env:
                FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

            - name: 🚀 Deploy Production
              if: ${{ github.ref == 'refs/heads/main' }}
              run:
                flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }}
              env:
                FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
